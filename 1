#include <Adafruit_NeoPixel.h>//引用头文件
#define LEDPIN 4   //定义了控制LED的引脚，6表示Microduino的D6引脚，可通过Hub转接出来
#define PIN_NUM 1 //定义允许接的led灯的个数 
#define  sensorPin  6  //人体红外的传感器接口。
#define buzzer_pin 8 //定义蜂鸣器驱动引脚。
#define buzzer_fre 600 //定义蜂鸣器输出频率。
    

    int state;   //人体红外传感器传回来的值。
    Adafruit_NeoPixel strip = Adafruit_NeoPixel(PIN_NUM, LEDPIN, NEO_GRB + NEO_KHZ800);
    //该函数第一个参数控制串联灯的个数，第二个是控制用哪个pin脚输出，第三个显示颜色和变化闪烁频率    
    
#include "U8glib.h"
//      与显示中文有关的库

U8GLIB_SSD1306_128X64 u8g(U8G_I2C_OPT_NONE);  //         与显示中文有关的函数

static unsigned char u8g_logo_bits[] U8G_PROGMEM = {                  //    接下来是将中文转化为编码。
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xC0,0x01,0xE0,
  0x03,0x00,0x00,0x00,0x00,0x7E,0x00,0xF0,0x01,0x00,0x00,0x00,
  0x00,0xFE,0xF9,0xF7,0x07,0x00,0x00,0x00,0x00,0x3C,0x00,0xF8,
  0x03,0x00,0x00,0x00,0x00,0xFC,0xF9,0xE1,0x03,0x00,0x00,0x00,
  0x00,0x38,0x00,0xF0,0x01,0x00,0x00,0x00,0x00,0xFC,0xFF,0x01,
  0x00,0x00,0x00,0x00,0x00,0x38,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0xFC,0xEF,0xF9,0x8F,0xD7,0x73,0xF1,0xC1,0x3B,0x9F,0xFF,
  0xFF,0x1E,0x3E,0x00,0x00,0xBC,0xEF,0xC1,0xE1,0x9F,0xFF,0xDD,
  0xE3,0x3F,0xCC,0xE1,0xF0,0xBF,0x7B,0x00,0x00,0x3C,0xF7,0xE1,
  0xE1,0x9F,0xFF,0xC6,0xF7,0x3E,0x8E,0xF3,0xF0,0xFF,0xF8,0x00,
  0x00,0x3C,0xF3,0xE1,0xF1,0x93,0xFF,0xE6,0xF7,0x3C,0x8F,0xF7,
  0xF0,0xFF,0xFC,0x00,0x00,0x7C,0xF2,0xE1,0xF1,0x83,0x87,0xFE,
  0xF7,0x39,0xFF,0xF7,0xF0,0xFF,0xFF,0x00,0x00,0x7C,0xF0,0xE3,
  0xF3,0xA3,0x03,0xFE,0xF7,0x3F,0xFF,0xF7,0x71,0xFC,0xFF,0x00,
  0x00,0x7C,0xF8,0xE3,0xF3,0xBF,0x03,0xFE,0xE3,0x3F,0xFF,0xF3,
  0x71,0xDC,0x7F,0x00,0x00,0x7E,0xFC,0xE7,0xE3,0xBF,0x03,0xFC,
  0xE3,0x3F,0xFE,0xF3,0x71,0x9C,0x7F,0x00,0x00,0xC1,0x03,0xF8,
  0xCF,0xE7,0x0F,0xF0,0x00,0x7F,0xFC,0xFC,0xFF,0x3E,0x1E,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00 };
//阳码、逐行、逆向
static unsigned char u8g_logo_bits1[] U8G_PROGMEM = {
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x0E,0x00,0x00,0x0C,0x00,0x00,0x00,0x00,0x03,0x00,
0x00,0x00,0x00,0x00,0xE0,0x00,0x1E,0x00,0x00,0x1E,0x00,0x00,0x00,0x00,0x03,0x80,
0x00,0x00,0x00,0x00,0xF0,0x00,0x1E,0x00,0x00,0x1E,0x00,0x00,0x00,0x00,0x03,0xC0,
0x00,0x06,0x00,0x00,0xF8,0x00,0x1E,0x00,0x00,0x1E,0x00,0x00,0x00,0x00,0x03,0x80,
0x00,0x0F,0x00,0x00,0xF8,0x00,0x3C,0x00,0x00,0x1E,0x00,0x00,0xC0,0x00,0x33,0x00,
0x00,0x0F,0x00,0x00,0xF0,0x80,0x3F,0x00,0x00,0x3C,0x00,0x01,0xC0,0x00,0xF7,0x00,
0x00,0x07,0x00,0x01,0xE7,0xE0,0x7F,0x00,0x00,0x60,0x40,0x01,0xC0,0x00,0xFB,0xC0,
0x03,0x87,0x00,0x01,0x1F,0xE0,0x5F,0x0F,0x00,0x47,0xF0,0x01,0xC0,0x01,0xF7,0xC0,
0x03,0xC7,0x00,0x00,0x7F,0xE0,0x1E,0x1F,0x00,0x8F,0xF0,0x01,0xC0,0x01,0xFF,0x80,
0x03,0xC7,0x00,0x00,0xFF,0xC0,0x3E,0x3F,0x01,0x9F,0xF8,0x01,0xC0,0x03,0xFF,0x00,
0x03,0xC7,0x00,0x03,0xFE,0x00,0x7F,0x7F,0x01,0xBE,0x38,0x01,0xF0,0x03,0xFF,0x80,
0x03,0xC7,0x00,0x07,0xF8,0x00,0x7F,0xF7,0x03,0x7E,0x38,0x01,0xF8,0x03,0xFB,0x80,
0x03,0xC7,0x00,0x1F,0xE0,0x00,0x7F,0xAE,0x07,0xEF,0x70,0x03,0xF8,0x03,0xF9,0xC0,
0x03,0xC7,0x00,0x3F,0x98,0x00,0x7F,0xEE,0x07,0xEF,0xE0,0x07,0xF8,0x01,0xF1,0x80,
0x03,0xC7,0xF0,0xFE,0x78,0x00,0xFF,0xFE,0x07,0xFF,0xE0,0x0F,0xC0,0x01,0xF3,0xE0,
0x0F,0x87,0xF0,0xFC,0xFC,0x01,0xFF,0x7E,0x07,0xFF,0x00,0x07,0x80,0x01,0x87,0xF0,
0x1F,0x87,0xF0,0xF1,0xFC,0x01,0xFE,0x76,0x07,0x7F,0x00,0x03,0x80,0x00,0x0F,0xF0,
0x1F,0x8F,0xC0,0xE1,0xD8,0x01,0xFF,0xF6,0x07,0x5F,0x00,0x03,0xC0,0x00,0x7F,0xF0,
0x0F,0x8F,0x80,0xC1,0xD8,0x01,0xFF,0xF6,0x06,0xDE,0x00,0x07,0xC0,0x02,0xFC,0x70,
0x03,0x9F,0x00,0x01,0xF8,0x01,0xFF,0xF6,0x02,0xFE,0x00,0x07,0xE0,0x03,0xF6,0x40,
0x03,0x3F,0x00,0x03,0xF0,0x00,0x3F,0x76,0x00,0xFF,0x80,0x06,0x70,0x07,0xCF,0x00,
0x03,0xFE,0x00,0x03,0xE0,0x00,0x7C,0x66,0x00,0xFF,0x80,0x06,0x70,0x07,0x1F,0x00,
0x03,0xFE,0x00,0x03,0xE0,0x00,0xFE,0x7E,0x00,0x7F,0x80,0x0E,0x38,0x07,0x1F,0x00,
0x03,0xEF,0x00,0x03,0xE0,0x00,0xFE,0x7C,0x00,0xFF,0x80,0x1C,0x3C,0x0F,0x0E,0x00,
0x03,0xCF,0xC0,0x01,0xF0,0x00,0x1E,0x78,0x00,0xFD,0x80,0x18,0x3E,0x0E,0x0E,0x00,
0x0F,0x87,0xC0,0x00,0x7C,0x00,0x3E,0x70,0x00,0xDF,0x80,0x38,0x1F,0x0E,0x0F,0xC0,
0x3F,0x03,0xC0,0x00,0x7E,0x00,0x3C,0x60,0x01,0xDF,0x00,0x70,0x0F,0x84,0x3F,0xC0,
0x3E,0x03,0xC0,0x00,0x7E,0x00,0x00,0x60,0x01,0xFE,0x00,0x60,0x07,0xC0,0xFF,0xC0,
0x3C,0x07,0xC0,0x06,0x6E,0x00,0x00,0x60,0x00,0xFE,0x00,0x00,0x03,0x00,0xFE,0x00,
0x00,0x0F,0x80,0x0E,0xEE,0x00,0x00,0x60,0x00,0xFC,0x00,0x00,0x00,0x00,0xFE,0x00,
0x00,0x04,0x00,0x0E,0xE6,0x00,0x00,0x60,0x00,0x0C,0x00,0x00,0x00,0x00,0xCE,0x00,
0x00,0x00,0x00,0x0E,0x60,0x00,0x00,0x60,0x00,0x0F,0xC0,0x00,0x00,0x00,0x0E,0x00,
0x00,0x00,0x00,0x0E,0x60,0x00,0x00,0x60,0x00,0x07,0xE0,0x00,0x00,0x00,0x3C,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x60,0x00,0x07,0xE0,0x00,0x00,0x00,0x3C,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x60,0x00,0x00,0x00,0x00,0x00,0x00,0x1C,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x60,0x00,0x00,0x00,0x00,0x00,0x00,0x1C,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x60,0x00,0x00,0x00,0x00,0x00,0x00,0x08,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x60,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x60,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x60,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x60,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x60,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00// 0
};
long timer;
int pkj=0;           


void draw(void) {                // 自定义一个函数，用来在屏幕上显示
  u8g.setFont(u8g_font_7x14);
  u8g.setPrintPos(pkj, 64); 
  u8g.print("Welcome! www.microduino.cc");
  u8g.drawXBMP( 0, 0, 128, 18, u8g_logo_bits);
  
}    

void draw2(void) {                          //自定义一个函数，用来在屏幕上显示
  u8g.setFont(u8g_font_7x14);
  u8g.setPrintPos(pkj, 64); 
  u8g.print("Welcome! www.microduino.cc");
  u8g.drawXBMP( 0, 0, 128, 18, u8g_logo_bits);
  u8g.drawXBMP( 0, 18, 32, 32, u8g_logo_bits1);
 
    
void setup() 
{
  strip.begin();   //准备对led进行数据发送
  pinMode(sensorPin, INPUT);                //  将人体红外传感器端口定义为输入模式
  Serial.begin(9600);                       //  串口波特率9600
  pinMode(buzzer_pin,OUTPUT);               //  将蜂鸣器端口定义为输出模式
}

void loop()                                 //开始循环函数
{                      
  state = digitalRead(sensorPin);           //   将传感器的值赋给state变量
  if (state == 1)                           //
{
  Serial.println("WELCOME!!!!!!!!!!!!!!!!!!");  //在串口监视器上显示这句话
  if(millis()-timer>2)
  {
    timer=millis();
    pkj-=4;
                          //在屏幕上显示，调用draw函数
  u8g.firstPage();  
  do {
    draw();
  } 


  while( u8g.nextPage() );

    tone(buzzer_pin,buzzer_fre);    //驱动蜂鸣器
    delay(200);
    noTone(buzzer_pin);
    strip.setPixelColor(0, strip.Color(255, 0, 0));//红光
    strip.show();   //LED显示
    delay(100);  //延迟1秒输出
    strip.setPixelColor(0, strip.Color(0, 255, 0));//绿光
    strip.show();  //LED显示
    delay(100);  //延迟1秒输出
    strip.setPixelColor(0, strip.Color(0, 0, 255));//蓝光
    strip.show();  //LED显示
    delay(100);  //延迟1秒输出
    strip.setPixelColor(0, strip.Color(0, 0, 0));//灭
    strip.show();  //LED显示
    delay(1000);  //延迟1秒输出

  }

  else
{
    Serial.println("Safe   Rush B");//在屏幕上显示这句话
  if(millis()-timer>2)
  {
    timer=millis();
    pkj-=4;                           //和在屏幕上显示有关（具体的一些我也不太懂）  
                                      //以及调用draw2函数
  }
  u8g.firstPage();  
  do {
    draw2();
  } 
  while( u8g.nextPage() );
    delay(100);
}
delay(1000);


}
